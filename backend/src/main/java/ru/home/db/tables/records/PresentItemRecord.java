/*
 * This file is generated by jOOQ.
*/
package ru.home.db.tables.records;


import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.home.db.tables.PresentItem;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5",
        "schema version:PUBLIC_1.5.0"
    },
    date = "2018-10-14T18:23:22.262Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PresentItemRecord extends UpdatableRecordImpl<PresentItemRecord> implements Record3<UUID, UUID, Integer> {

    private static final long serialVersionUID = -206118889;

    /**
     * Setter for <code>PUBLIC.present_item.present_id</code>.
     */
    public void setPresentId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.present_item.present_id</code>.
     */
    public UUID getPresentId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>PUBLIC.present_item.candy_id</code>.
     */
    public void setCandyId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.present_item.candy_id</code>.
     */
    public UUID getCandyId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>PUBLIC.present_item.count</code>.
     */
    public void setCount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.present_item.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UUID, UUID, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UUID, UUID, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return PresentItem.PRESENT_ITEM.PRESENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return PresentItem.PRESENT_ITEM.CANDY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return PresentItem.PRESENT_ITEM.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getPresentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component2() {
        return getCandyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getPresentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getCandyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PresentItemRecord value1(UUID value) {
        setPresentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PresentItemRecord value2(UUID value) {
        setCandyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PresentItemRecord value3(Integer value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PresentItemRecord values(UUID value1, UUID value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PresentItemRecord
     */
    public PresentItemRecord() {
        super(PresentItem.PRESENT_ITEM);
    }

    /**
     * Create a detached, initialised PresentItemRecord
     */
    public PresentItemRecord(UUID presentId, UUID candyId, Integer count) {
        super(PresentItem.PRESENT_ITEM);

        set(0, presentId);
        set(1, candyId);
        set(2, count);
    }
}
